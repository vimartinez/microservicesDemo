/*
 * Credit Management
 * This service domain provides a bank-wide/oversight function to qualify credit pricing for offered products and services to reflect the bank's appetite to write the business. This decision can override the standard product pricing procedure
 *
 * OpenAPI spec version: 10.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.hsbc.hbar.mdw.creditmanagement.model;

import java.util.Objects;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Transient;

import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * CreditPricingAssessment
 */

@Entity
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-24T02:21:21.247Z[GMT]")
public class CreditPricingAssessment {
	
  @Id
  @GeneratedValue(strategy=GenerationType.IDENTITY)
  private Long id;
	
  @Transient
  @SerializedName("BusinessUnitReference")
  private Object businessUnitReference = null;

  @Transient
  @SerializedName("CustomerReference")
  private Object customerReference = null;

  @Transient
  @SerializedName("SectorReference")
  private Object sectorReference = null;

  @SerializedName("ProductType")
  private String productType = null;

  @Transient
  @SerializedName("ProposedTransactionReference")
  private Object proposedTransactionReference = null;

  @SerializedName("ProposedTransactionRecord")
  private String proposedTransactionRecord = null;

  @SerializedName("ProposedTransactionType")
  private String proposedTransactionType = null;

  @SerializedName("ProposedTransactionAmount")
  private BigDecimal proposedTransactionAmount = null;

  @SerializedName("ProposedTransactionRecordDate")
  private String proposedTransactionRecordDate = null;

  @SerializedName("ProposedTransactionBookingEntity")
  private String proposedTransactionBookingEntity = null;

  @SerializedName("ProposedTransactionCreditPricingAssessment")
  private String proposedTransactionCreditPricingAssessment = null;

  public CreditPricingAssessment businessUnitReference(Object businessUnitReference) {
    this.businessUnitReference = businessUnitReference;
    return this;
  }

   /**
   * Get businessUnitReference
   * @return businessUnitReference
  **/
  @Schema(description = "")
  public Object getBusinessUnitReference() {
    return businessUnitReference;
  }

  public void setBusinessUnitReference(Object businessUnitReference) {
    this.businessUnitReference = businessUnitReference;
  }

  public CreditPricingAssessment customerReference(Object customerReference) {
    this.customerReference = customerReference;
    return this;
  }

   /**
   * Get customerReference
   * @return customerReference
  **/
  @Schema(description = "")
  public Object getCustomerReference() {
    return customerReference;
  }

  public void setCustomerReference(Object customerReference) {
    this.customerReference = customerReference;
  }

  public CreditPricingAssessment sectorReference(Object sectorReference) {
    this.sectorReference = sectorReference;
    return this;
  }

   /**
   * Get sectorReference
   * @return sectorReference
  **/
  @Schema(description = "")
  public Object getSectorReference() {
    return sectorReference;
  }

  public void setSectorReference(Object sectorReference) {
    this.sectorReference = sectorReference;
  }

  public CreditPricingAssessment productType(String productType) {
    this.productType = productType;
    return this;
  }

   /**
   * Get productType
   * @return productType
  **/
  @Schema(description = "")
  public String getProductType() {
    return productType;
  }

  public void setProductType(String productType) {
    this.productType = productType;
  }

  public CreditPricingAssessment proposedTransactionReference(Object proposedTransactionReference) {
    this.proposedTransactionReference = proposedTransactionReference;
    return this;
  }

   /**
   * Get proposedTransactionReference
   * @return proposedTransactionReference
  **/
  @Schema(description = "")
  public Object getProposedTransactionReference() {
    return proposedTransactionReference;
  }

  public void setProposedTransactionReference(Object proposedTransactionReference) {
    this.proposedTransactionReference = proposedTransactionReference;
  }

  public CreditPricingAssessment proposedTransactionRecord(String proposedTransactionRecord) {
    this.proposedTransactionRecord = proposedTransactionRecord;
    return this;
  }

   /**
   * Get proposedTransactionRecord
   * @return proposedTransactionRecord
  **/
  @Schema(description = "")
  public String getProposedTransactionRecord() {
    return proposedTransactionRecord;
  }

  public void setProposedTransactionRecord(String proposedTransactionRecord) {
    this.proposedTransactionRecord = proposedTransactionRecord;
  }

  public CreditPricingAssessment proposedTransactionType(String proposedTransactionType) {
    this.proposedTransactionType = proposedTransactionType;
    return this;
  }

   /**
   * Get proposedTransactionType
   * @return proposedTransactionType
  **/
  @Schema(description = "")
  public String getProposedTransactionType() {
    return proposedTransactionType;
  }

  public void setProposedTransactionType(String proposedTransactionType) {
    this.proposedTransactionType = proposedTransactionType;
  }

  public CreditPricingAssessment proposedTransactionAmount(BigDecimal proposedTransactionAmount) {
    this.proposedTransactionAmount = proposedTransactionAmount;
    return this;
  }

   /**
   * Get proposedTransactionAmount
   * @return proposedTransactionAmount
  **/
  @Schema(description = "")
  public BigDecimal getProposedTransactionAmount() {
    return proposedTransactionAmount;
  }

  public void setProposedTransactionAmount(BigDecimal proposedTransactionAmount) {
    this.proposedTransactionAmount = proposedTransactionAmount;
  }

  public CreditPricingAssessment proposedTransactionRecordDate(String proposedTransactionRecordDate) {
    this.proposedTransactionRecordDate = proposedTransactionRecordDate;
    return this;
  }

   /**
   * Get proposedTransactionRecordDate
   * @return proposedTransactionRecordDate
  **/
  @Schema(description = "")
  public String getProposedTransactionRecordDate() {
    return proposedTransactionRecordDate;
  }

  public void setProposedTransactionRecordDate(String proposedTransactionRecordDate) {
    this.proposedTransactionRecordDate = proposedTransactionRecordDate;
  }

  public CreditPricingAssessment proposedTransactionBookingEntity(String proposedTransactionBookingEntity) {
    this.proposedTransactionBookingEntity = proposedTransactionBookingEntity;
    return this;
  }

   /**
   * Get proposedTransactionBookingEntity
   * @return proposedTransactionBookingEntity
  **/
  @Schema(description = "")
  public String getProposedTransactionBookingEntity() {
    return proposedTransactionBookingEntity;
  }

  public void setProposedTransactionBookingEntity(String proposedTransactionBookingEntity) {
    this.proposedTransactionBookingEntity = proposedTransactionBookingEntity;
  }

  public CreditPricingAssessment proposedTransactionCreditPricingAssessment(String proposedTransactionCreditPricingAssessment) {
    this.proposedTransactionCreditPricingAssessment = proposedTransactionCreditPricingAssessment;
    return this;
  }

   /**
   * Get proposedTransactionCreditPricingAssessment
   * @return proposedTransactionCreditPricingAssessment
  **/
  @Schema(description = "")
  public String getProposedTransactionCreditPricingAssessment() {
    return proposedTransactionCreditPricingAssessment;
  }

  public void setProposedTransactionCreditPricingAssessment(String proposedTransactionCreditPricingAssessment) {
    this.proposedTransactionCreditPricingAssessment = proposedTransactionCreditPricingAssessment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditPricingAssessment creditPricingAssessment = (CreditPricingAssessment) o;
    return Objects.equals(this.businessUnitReference, creditPricingAssessment.businessUnitReference) &&
        Objects.equals(this.customerReference, creditPricingAssessment.customerReference) &&
        Objects.equals(this.sectorReference, creditPricingAssessment.sectorReference) &&
        Objects.equals(this.productType, creditPricingAssessment.productType) &&
        Objects.equals(this.proposedTransactionReference, creditPricingAssessment.proposedTransactionReference) &&
        Objects.equals(this.proposedTransactionRecord, creditPricingAssessment.proposedTransactionRecord) &&
        Objects.equals(this.proposedTransactionType, creditPricingAssessment.proposedTransactionType) &&
        Objects.equals(this.proposedTransactionAmount, creditPricingAssessment.proposedTransactionAmount) &&
        Objects.equals(this.proposedTransactionRecordDate, creditPricingAssessment.proposedTransactionRecordDate) &&
        Objects.equals(this.proposedTransactionBookingEntity, creditPricingAssessment.proposedTransactionBookingEntity) &&
        Objects.equals(this.proposedTransactionCreditPricingAssessment, creditPricingAssessment.proposedTransactionCreditPricingAssessment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessUnitReference, customerReference, sectorReference, productType, proposedTransactionReference, proposedTransactionRecord, proposedTransactionType, proposedTransactionAmount, proposedTransactionRecordDate, proposedTransactionBookingEntity, proposedTransactionCreditPricingAssessment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditPricingAssessment {\n");
    
    sb.append("    businessUnitReference: ").append(toIndentedString(businessUnitReference)).append("\n");
    sb.append("    customerReference: ").append(toIndentedString(customerReference)).append("\n");
    sb.append("    sectorReference: ").append(toIndentedString(sectorReference)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    proposedTransactionReference: ").append(toIndentedString(proposedTransactionReference)).append("\n");
    sb.append("    proposedTransactionRecord: ").append(toIndentedString(proposedTransactionRecord)).append("\n");
    sb.append("    proposedTransactionType: ").append(toIndentedString(proposedTransactionType)).append("\n");
    sb.append("    proposedTransactionAmount: ").append(toIndentedString(proposedTransactionAmount)).append("\n");
    sb.append("    proposedTransactionRecordDate: ").append(toIndentedString(proposedTransactionRecordDate)).append("\n");
    sb.append("    proposedTransactionBookingEntity: ").append(toIndentedString(proposedTransactionBookingEntity)).append("\n");
    sb.append("    proposedTransactionCreditPricingAssessment: ").append(toIndentedString(proposedTransactionCreditPricingAssessment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
